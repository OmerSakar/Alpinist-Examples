// -*- tab-width:2 ; indent-tabs-mode:nil -*-
//:: cases kernel-example
//:: tools silicon
//:: verdict Pass

class Ref {
  
  gpuopt glob_to_reg b tid - 1;
  gpuopt glob_to_reg a tid;
  context_everywhere a != null;
  context_everywhere b != null;
  context_everywhere c != null;
  context_everywhere tcount >= 0;
  context_everywhere a.length == tcount;
  context_everywhere b.length == tcount;
  context_everywhere c.length == tcount;
  requires (\forall* int i;0 <= i && i < tcount;Perm( a [ i ] , write ));
  requires (\forall* int i;0 <= i && i < tcount;Perm( b [ i ] , write ));
  requires (\forall* int i;0 <= i && i < tcount;Perm( c [ i ] , 1 \ 4 ));
  void main(int tcount,int[] a,int[] b,int[] c){
    par fwd(int tid = 0 .. tcount)
      requires Perm( a [ tid ] , write );
      requires Perm( b [ tid ] , write );
      requires Perm( c [ tid ] , 1 \ 4 );
      {
        b [ tid ] = c [ tid ];
        barrier(fwd) { 
          requires 0 <= tid && tid < tcount;
          requires (tid > 0 ==> Perm( a [ tid ] , write ));
          requires Perm( b [ tid ] , write );
          requires Perm( c [ tid ] , 1 \ 4 );
          ensures 0 <= tid && tid < tcount;
          ensures (tid > 0 ==> Perm( a [ tid ] , write ));
          ensures Perm( b [ tid ] , 1 \ 4 );
          ensures (tid > 0 ==> Perm( b [ (tid - 1) ] , 1 \ 4 ));
        }
        if (tid > 0) {
          a [ tid ] = b [ (tid - 1) ] + b [ tid ];
        }
      }
  }
  
}

