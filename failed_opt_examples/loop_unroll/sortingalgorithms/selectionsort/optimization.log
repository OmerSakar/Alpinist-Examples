[progress] parsing inputs...
[progress] Parsing pvl file Alpinist-Examples-Bad/loop_unroll/sortingalgorithms/selectionsort/bad_selection.pvl
[progress] parsing pass took 26720ms
[progress] AST conversion pass took 680ms
[progress] Read Alpinist-Examples-Bad/loop_unroll/sortingalgorithms/selectionsort/bad_selection.pvl successfully
[progress] Parsed 1 file(s) in: 28390ms
[progress] [03%] splitCompositeDeclarations took 0 ms
[progress] [06%] checkTypesJava took 0 ms
[progress] [10%] unrollLoops took 830 ms
[progress] [13%] checkTypesJava took 500 ms
[progress] [16%] splitCompositeDeclarations took 0 ms
[progress] [20%] loadExternalClasses took 0 ms
[progress] [23%] standardize took 0 ms
[progress] [26%] specifyImplicitLoopLabels took 0 ms
[progress] [30%] propagateAbstractMethodContracts took 0 ms
[progress] [33%] arrayNullValuesToNone took 290 ms
[progress] [36%] finalizeArguments took 0 ms
[progress] [40%] addRequirementSatCheck took 0 ms
[progress] [43%] checkAssignInPar took 130 ms
[progress] [46%] propagateInvariants took 0 ms
[progress] [50%] dummy-InvariantsPropagatedHere took 0 ms
[progress] first parsing pass took 2840ms
[progress] AST conversion took 150ms
Could not find file: /usr/share/vercors/res/config/java/lang/Object.java
[progress] first parsing pass took 2870ms
[progress] AST conversion took 560ms
[progress] [53%] simplify took 26410 ms
[progress] first parsing pass took 340ms
[progress] AST conversion took 110ms
[progress] [56%] optimizeForSilver took 540 ms
[progress] [60%] desugarArrayOps took 260 ms
[progress] [63%] flattenNestedExpressions took 0 ms
[progress] [66%] encodeInheritanceToDomain took 0 ms
[progress] [70%] importADTsAndRefEncode took 11200 ms
[progress] [73%] returnTypeToOutParameter took 0 ms
[progress] [76%] reduceQuantifierNesting took 100 ms
[progress] [80%] inlinePatternsToTriggers took 0 ms
[progress] [83%] generateQuantifierTriggers took 0 ms
[progress] [86%] scaleAllPredicateApplications took 0 ms
[progress] [90%] collectInnerDeclarations took 0 ms
[progress] [93%] collectDeclarations took 0 ms
[progress] verifying with builtin silicon backend
[progress] conversion took 20ms
Errors! (1)
=== Alpinist-Examples-Bad/loop_unroll/sortingalgorithms/selectionsort/bad_selection.pvl ===
 184     int temp;
 185     assert inp_seq_all [ 0 ] == inp_seq_cur;
        [-------------------------------
 186     gpuopt loop_unroll outerLoop 1;
 187     loop_invariant outerLoop >= 0;
 188     loop_invariant outerLoop <= size - 1;
 189     loop_invariant (\forall* int i;i >= 0 && i < size;Perm( input [ i ] , write ));
 190     loop_invariant (| inp_seq_all |) == outerLoop + 1;
 191     loop_invariant (\forall int i;0 <= i && i < outerLoop + 1;(| inp_seq_all [ i ] |) == size);
 192     loop_invariant (| inp_seq_cur |) == size;
 193     loop_invariant (\forall int i;0 <= i && i < size;(inp_seq_all [ outerLoop ]) [ i ] == inp_seq_cur [ i ]);
 194     loop_invariant (\forall int i;0 <= i && i < size;input [ i ] == inp_seq_cur [ i ]);
 195     loop_invariant isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 196     while(outerLoop < size - 1){
 197       innerLoop = outerLoop + 1;
 198       minIndex = outerLoop;
 199       assert isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 200       loop_invariant outerLoop >= 0;
 201       loop_invariant outerLoop < size - 1;
 202       loop_invariant innerLoop >= outerLoop + 1;
 203       loop_invariant innerLoop <= size;
 204       loop_invariant (\forall* int i;i >= 0 && i < size;Perm( input [ i ] , write ));
 205       loop_invariant minIndex >= outerLoop;
 206       loop_invariant minIndex < size;
 207       loop_invariant (\forall int i;0 <= i && i < size;input [ i ] == inp_seq_cur [ i ]);
 208       loop_invariant isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 209       while(innerLoop < size){
 210         if (input [ innerLoop ] < input [ minIndex ]) {
 211           minIndex = innerLoop;
 212         }
 213         innerLoop = innerLoop + 1;
 214       }
 215       assert isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 216       lemma_permutation_apply(inp_seq_all [ 0 ],inp_seq_cur,swap(inp_seq_cur,outerLoop,minIndex,0),outerLoop,minIndex);
 217       temp = input [ outerLoop ];
 218       input [ outerLoop ] = input [ minIndex ];
 219       inp_seq_cur = inp_seq_cur [ outerLoop -> input [ minIndex ] ];
 220       input [ minIndex ] = temp;
 221       inp_seq_cur = inp_seq_cur [ minIndex -> temp ];
 222       outerLoop = outerLoop + 1;
 223       inp_seq_all = inp_seq_all + seq<seq<int>>{inp_seq_cur};
 224     }
     -----]
 225   }
 226 
-----------------------------------------
  AssertFailed:AssertionFalse
=========================================
=== Alpinist-Examples-Bad/loop_unroll/sortingalgorithms/selectionsort/bad_selection.pvl ===
 184     int temp;
 185     assert inp_seq_all [ 0 ] == inp_seq_cur;
        [-------------------------------
 186     gpuopt loop_unroll outerLoop 1;
 187     loop_invariant outerLoop >= 0;
 188     loop_invariant outerLoop <= size - 1;
 189     loop_invariant (\forall* int i;i >= 0 && i < size;Perm( input [ i ] , write ));
 190     loop_invariant (| inp_seq_all |) == outerLoop + 1;
 191     loop_invariant (\forall int i;0 <= i && i < outerLoop + 1;(| inp_seq_all [ i ] |) == size);
 192     loop_invariant (| inp_seq_cur |) == size;
 193     loop_invariant (\forall int i;0 <= i && i < size;(inp_seq_all [ outerLoop ]) [ i ] == inp_seq_cur [ i ]);
 194     loop_invariant (\forall int i;0 <= i && i < size;input [ i ] == inp_seq_cur [ i ]);
 195     loop_invariant isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 196     while(outerLoop < size - 1){
 197       innerLoop = outerLoop + 1;
 198       minIndex = outerLoop;
 199       assert isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 200       loop_invariant outerLoop >= 0;
 201       loop_invariant outerLoop < size - 1;
 202       loop_invariant innerLoop >= outerLoop + 1;
 203       loop_invariant innerLoop <= size;
 204       loop_invariant (\forall* int i;i >= 0 && i < size;Perm( input [ i ] , write ));
 205       loop_invariant minIndex >= outerLoop;
 206       loop_invariant minIndex < size;
 207       loop_invariant (\forall int i;0 <= i && i < size;input [ i ] == inp_seq_cur [ i ]);
 208       loop_invariant isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 209       while(innerLoop < size){
 210         if (input [ innerLoop ] < input [ minIndex ]) {
 211           minIndex = innerLoop;
 212         }
 213         innerLoop = innerLoop + 1;
 214       }
 215       assert isApermutation(inp_seq_all [ 0 ],inp_seq_cur);
 216       lemma_permutation_apply(inp_seq_all [ 0 ],inp_seq_cur,swap(inp_seq_cur,outerLoop,minIndex,0),outerLoop,minIndex);
 217       temp = input [ outerLoop ];
 218       input [ outerLoop ] = input [ minIndex ];
 219       inp_seq_cur = inp_seq_cur [ outerLoop -> input [ minIndex ] ];
 220       input [ minIndex ] = temp;
 221       inp_seq_cur = inp_seq_cur [ minIndex -> temp ];
 222       outerLoop = outerLoop + 1;
 223       inp_seq_all = inp_seq_all + seq<seq<int>>{inp_seq_cur};
 224     }
     -----]
 225   }
 226 
-----------------------------------------
  caused by
=========================================
[progress] task Viper verification took 52852 ms
The final verdict is Fail
[progress] entire run took 270697 ms
